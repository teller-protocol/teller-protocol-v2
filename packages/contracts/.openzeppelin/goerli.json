{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5956c8158bde236d8e3638362ff7555C329A839B",
    "txHash": "0x883dd1eedb1d9266643110596e65620dfa50f33fba84601609a385522982e0b0"
  },
  "proxies": [
    {
      "address": "0xfa0a79661ad21fbd416ddbD9a098564b3686adf5",
      "txHash": "0x182f008f65399b832d9819b4b994b7aa21efb96030ccf9c69ff973715412ec33",
      "kind": "transparent"
    },
    {
      "address": "0xD66de8b25C4165dA2e7696e15E8436380823B118",
      "txHash": "0xce9939b4ef707cb105805eb74cdef9c1815696b817811dcfcfdc06164ad07ee8",
      "kind": "transparent"
    },
    {
      "address": "0x74FFC87282ab32c8E0969E26F93C820a213ae146",
      "txHash": "0xa483828107614708c307e656b8588a921c1eec5abe4ce361b199b582f5eef32d",
      "kind": "transparent"
    },
    {
      "address": "0xB1b668592A4FCA5d0Cd91D4E5D8b33cb95043E43",
      "txHash": "0x2717d02f52012bc65b1d7979940cc7e019c3d92f39c3cecb99ce13e60ea49e8b",
      "kind": "transparent"
    },
    {
      "address": "0xF39674F4d3878A732Cb4c70b377C013AffB89C1F",
      "txHash": "0xb56c74f52b30ca191323514237ca8a7924981a3c57f530750d6925285957a013",
      "kind": "transparent"
    },
    {
      "address": "0x98Ca52786e967d1469090AdC075416948Ca004A7",
      "txHash": "0x9729dacca6e861ac8144340bea469cb975796bfc33416ed377348f6832cacdf5",
      "kind": "transparent"
    },
    {
      "address": "0x8cDb56283A26684D6020B3589615df2eDEDc3C8C",
      "txHash": "0x0f16959e169ca35e6f2cb648a3e55da3977ce712a7f0b171659a45edd06d535f",
      "kind": "transparent"
    },
    {
      "address": "0x195c6608705546725DF0629dd60690Cf2b367734",
      "txHash": "0xd41be29c0f527a0634980e9213d5f3aed9933a3ea7f9d1a228126bb9c88ce247",
      "kind": "transparent"
    },
    {
      "address": "0x88F8c9e7dACC43Aa37C45C4FfAA204fda821704c",
      "txHash": "0x1b775f9c924ddea0d2d27381b6fe65966d380c35dc872f6d860895bac4f76285",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7c31d36bf42b08f3fdee64dc8cbf38ef1b7452267b3a732e5b77ba15eb34cbec": {
      "address": "0x5EeA1883E422556e7F1A99Acd6ddb4C2e96cF720",
      "txHash": "0x52573c78f019fa87cd7846fd81da54e1941afbff771025104c472154b75c5bb5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tellerV2",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ITellerV2)24827",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:23"
          },
          {
            "label": "collateralEscrowBeacon",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:24"
          },
          {
            "label": "_escrows",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:27"
          },
          {
            "label": "_bidCollaterals",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_struct(CollateralInfo)13055_storage)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ITellerV2)24827": {
            "label": "contract ITellerV2",
            "numberOfBytes": "20"
          },
          "t_enum(CollateralType)25222": {
            "label": "enum CollateralType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Collateral)25232_storage)": {
            "label": "mapping(address => struct Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollateralInfo)13055_storage)": {
            "label": "mapping(uint256 => struct CollateralManager.CollateralInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4547_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4232_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)25232_storage": {
            "label": "struct Collateral",
            "members": [
              {
                "label": "_collateralType",
                "type": "t_enum(CollateralType)25222",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CollateralInfo)13055_storage": {
            "label": "struct CollateralManager.CollateralInfo",
            "members": [
              {
                "label": "collateralAddresses",
                "type": "t_struct(AddressSet)4547_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralInfo",
                "type": "t_mapping(t_address,t_struct(Collateral)25232_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)4232_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "870e02eff43ebc9ae33b8e6f3a3b7b1816f4cb20bde31ddfaf45084a2d5840ae": {
      "address": "0x2Db50eF7F702fB335ee7AbB915a28AeAD2cb3eE8",
      "txHash": "0x6f9dafb648e706ce6c134545e1297d23c5dd65aff9d7f237ea1dccde0f54ce35",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "tellerV2",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ITellerV2)24827",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:17"
          },
          {
            "label": "_delinquencies",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(UintSet)12879_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:18"
          },
          {
            "label": "_defaults",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(UintSet)12879_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:19"
          },
          {
            "label": "_currentDelinquencies",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(UintSet)12879_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:20"
          },
          {
            "label": "_currentDefaults",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UintSet)12879_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ITellerV2)24827": {
            "label": "contract ITellerV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UintSet)12879_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)12407_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)12879_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ae2a0d1a27ef0b4ea59d27cb615661707dcc2f62881a732c3742b4de93687cd": {
      "address": "0xFe5394B67196EA95301D6ECB5389E98A02984cC2",
      "txHash": "0x147f8f36d3e3fabecfcde8938c4986357f511fe46ab59f12e69c258299a211d9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_protocolFee",
            "offset": 0,
            "slot": "101",
            "type": "t_uint16",
            "contract": "ProtocolFee",
            "src": "contracts/ProtocolFee.sol:8"
          },
          {
            "label": "_paused",
            "offset": 2,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "bidId",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:90"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(Bid)23284_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:93"
          },
          {
            "label": "borrowerBids",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:96"
          },
          {
            "label": "__lenderVolumeFilled",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:99"
          },
          {
            "label": "__totalVolumeFilled",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:102"
          },
          {
            "label": "__lendingTokensSet",
            "offset": 0,
            "slot": "156",
            "type": "t_struct(AddressSet)12722_storage",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:105"
          },
          {
            "label": "marketRegistry",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IMarketRegistry)24584",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:107"
          },
          {
            "label": "reputationManager",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IReputationManager)24643",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:108"
          },
          {
            "label": "_borrowerBidsActive",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(UintSet)12879_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:111"
          },
          {
            "label": "bidDefaultDuration",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:113"
          },
          {
            "label": "bidExpirationTime",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:114"
          },
          {
            "label": "lenderVolumeFilled",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:118"
          },
          {
            "label": "totalVolumeFilled",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:122"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:124"
          },
          {
            "label": "uris",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:128"
          },
          {
            "label": "_trustedMarketForwarders",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:133"
          },
          {
            "label": "_approvedForwarderSenders",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(AddressSet)12722_storage)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:135"
          },
          {
            "label": "lenderCommitmentForwarder",
            "offset": 0,
            "slot": "169",
            "type": "t_address",
            "contract": "TellerV2Storage_G2",
            "src": "contracts/TellerV2Storage.sol:140"
          },
          {
            "label": "collateralManager",
            "offset": 0,
            "slot": "170",
            "type": "t_contract(ICollateralManager)24024",
            "contract": "TellerV2Storage_G3",
            "src": "contracts/TellerV2Storage.sol:144"
          },
          {
            "label": "lenderManager",
            "offset": 0,
            "slot": "171",
            "type": "t_contract(ILenderManager)24351",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:149"
          },
          {
            "label": "bidPaymentCycleType",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_enum(PaymentCycleType)27017)",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:151"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)6959": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ICollateralManager)24024": {
            "label": "contract ICollateralManager",
            "numberOfBytes": "20"
          },
          "t_contract(ILenderManager)24351": {
            "label": "contract ILenderManager",
            "numberOfBytes": "20"
          },
          "t_contract(IMarketRegistry)24584": {
            "label": "contract IMarketRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IReputationManager)24643": {
            "label": "contract IReputationManager",
            "numberOfBytes": "20"
          },
          "t_enum(BidState)23256": {
            "label": "enum BidState",
            "members": [
              "NONEXISTENT",
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID",
              "LIQUIDATED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentCycleType)27017": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)27014": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)12722_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)12879_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(PaymentCycleType)27017)": {
            "label": "mapping(uint256 => enum PaymentCycleType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bid)23284_storage)": {
            "label": "mapping(uint256 => struct Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12722_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bid)23284_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketplaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_metadataURI",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23301_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23308_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "state",
                "type": "t_enum(BidState)23256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)27014",
                "offset": 1,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(LoanDetails)23301_storage": {
            "label": "struct LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)6959",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23261_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32",
                "offset": 4,
                "slot": "4"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32",
                "offset": 8,
                "slot": "4"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32",
                "offset": 12,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Payment)23261_storage": {
            "label": "struct Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interest",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)12407_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Terms)23308_storage": {
            "label": "struct Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "APR",
                "type": "t_uint16",
                "offset": 4,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)12879_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "032c39add4d0355222025ad6d0b242e0fa061dbd76a18f52856a1551a3cadfac": {
      "address": "0x3D62a3A999edDF2d3dbB0CFf341E60F34701816F",
      "txHash": "0xa9ae7d2b87df7cf0c02c3c8cd4abea71dc784fba1a692b6a32775e19d87ca203",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5cec108d1660c8c1cefb312c59e8ab5136da1c7f63b52e17e247b0d9f7a482f9": {
      "address": "0x5cfD3aeD08a444Be32839bD911Ebecd688861164",
      "txHash": "0xa7e7cf8032bb3f635efd41283c9408245402adc85fe71c47b00b3c53f6251fab",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "allocationCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:31"
          },
          {
            "label": "allocatedRewards",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(RewardAllocation)19496_storage)",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:34"
          },
          {
            "label": "rewardClaimedForBid",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(AllocationStrategy)19499": {
            "label": "enum IMarketLiquidityRewards.AllocationStrategy",
            "members": [
              "BORROWER",
              "LENDER"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RewardAllocation)19496_storage)": {
            "label": "mapping(uint256 => struct IMarketLiquidityRewards.RewardAllocation)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardAllocation)19496_storage": {
            "label": "struct IMarketLiquidityRewards.RewardAllocation",
            "members": [
              {
                "label": "allocator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardTokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requiredPrincipalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requiredCollateralTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minimumCollateralPerPrincipalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rewardPerLoanPrincipalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bidStartTimeMin",
                "type": "t_uint32",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidStartTimeMax",
                "type": "t_uint32",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "allocationStrategy",
                "type": "t_enum(AllocationStrategy)19499",
                "offset": 8,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "af4f68075e6beb402a92a441ff0083c65d3d88ea13dad58ecbd9037c5717785f": {
      "address": "0x9065E7b11d8de642676B49e16A37EF0B7D38e489",
      "txHash": "0xc78b89fd2f98abda9be7394c39c2cb706e338921b3bbd212cc436fcc3d455c9f",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "TellerV2MarketForwarder",
            "src": "contracts/TellerV2MarketForwarder.sol:152"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(Commitment)15718_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:57"
          },
          {
            "label": "commitmentCount",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:59"
          },
          {
            "label": "commitmentBorrowersList",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)4547_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(CommitmentCollateralType)15694": {
            "label": "enum LenderCommitmentForwarder.CommitmentCollateralType",
            "members": [
              "NONE",
              "ERC20",
              "ERC721",
              "ERC1155",
              "ERC721_ANY_ID",
              "ERC1155_ANY_ID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)4547_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commitment)15718_storage)": {
            "label": "mapping(uint256 => struct LenderCommitmentForwarder.Commitment)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4547_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4232_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Commitment)15718_storage": {
            "label": "struct LenderCommitmentForwarder.Commitment",
            "members": [
              {
                "label": "maxPrincipal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minInterestRate",
                "type": "t_uint16",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "collateralTokenAddress",
                "type": "t_address",
                "offset": 10,
                "slot": "1"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPrincipalPerCollateralAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collateralTokenType",
                "type": "t_enum(CommitmentCollateralType)15694",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "principalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4232_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a9758de18985e5e277a885750b0a3e646bd88247312f1ef81dcbd400019a2710": {
      "address": "0xbC706F216B0E65329DaF7c43359E98eE197a3a58",
      "txHash": "0xb3da038a038a3a109dd0d227661e00127f20afca71a2450e721af05d884c5d35",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "lenderAttestationSchemaId",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:51"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Marketplace)17561_storage)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:53"
          },
          {
            "label": "__uriToId",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:54"
          },
          {
            "label": "marketCount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:55"
          },
          {
            "label": "_attestingSchemaId",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:56"
          },
          {
            "label": "borrowerAttestationSchemaId",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:57"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:59"
          },
          {
            "label": "marketIsClosed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:61"
          },
          {
            "label": "tellerAS",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(TellerAS)15091",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(TellerAS)15091": {
            "label": "contract TellerAS",
            "numberOfBytes": "20"
          },
          "t_enum(PaymentCycleType)27017": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)27014": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Marketplace)17561_storage)": {
            "label": "mapping(uint256 => struct MarketRegistry.Marketplace)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12722_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Marketplace)17561_storage": {
            "label": "struct MarketRegistry.Marketplace",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "marketplaceFeePercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "verifiedLendersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "bidExpirationTime",
                "type": "t_uint32",
                "offset": 8,
                "slot": "6"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool",
                "offset": 12,
                "slot": "6"
              },
              {
                "label": "verifiedBorrowersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)27014",
                "offset": 20,
                "slot": "10"
              },
              {
                "label": "paymentCycleType",
                "type": "t_enum(PaymentCycleType)27017",
                "offset": 21,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)12407_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "005b230eaadb88d08ff78683fc664828001a1eacbb599928b28956c921a6dff5": {
      "address": "0x2806584eEb812F8F3E15BEF9986db27752679263",
      "txHash": "0xf261b13b36373d9d8c8f7b201eb7f360d760b2f3bbadc2ae6153bb86cebeef92",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b3b40208b3aacd41f6cf178037b325c13c7ad33ea564255191a05151432db52b": {
      "address": "0x1CA0daD022e5FE2e4d31A15248421Be2BC8e35eC",
      "txHash": "0x6342cf3f4c27e343ade16723132e96f635a34a2b802205a152b180fcf730d058",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "EscrowVault",
            "src": "contracts/EscrowVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "af09bd5495be68defee9e7d7daeb69c6eff8349327f9e0bd54ef2275c69f9f93": {
      "address": "0xAD9AcE8A1Ea7267DC2ab19bf4b10465D56D5eCF0",
      "txHash": "0x7166ef825801b1c8620a9069af3cf507b6879c558bd3a35ea971de9019e265e2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "lenderAttestationSchemaId",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:51"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Marketplace)17674_storage)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:53"
          },
          {
            "label": "__uriToId",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:54"
          },
          {
            "label": "marketCount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:55"
          },
          {
            "label": "_attestingSchemaId",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:56"
          },
          {
            "label": "borrowerAttestationSchemaId",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:57"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:59"
          },
          {
            "label": "marketIsClosed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:61"
          },
          {
            "label": "tellerAS",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(TellerAS)15136",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(TellerAS)15136": {
            "label": "contract TellerAS",
            "numberOfBytes": "20"
          },
          "t_enum(PaymentCycleType)27275": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)27272": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Marketplace)17674_storage)": {
            "label": "mapping(uint256 => struct MarketRegistry.Marketplace)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12722_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Marketplace)17674_storage": {
            "label": "struct MarketRegistry.Marketplace",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "marketplaceFeePercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "verifiedLendersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "bidExpirationTime",
                "type": "t_uint32",
                "offset": 8,
                "slot": "6"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool",
                "offset": 12,
                "slot": "6"
              },
              {
                "label": "verifiedBorrowersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)27272",
                "offset": 20,
                "slot": "10"
              },
              {
                "label": "paymentCycleType",
                "type": "t_enum(PaymentCycleType)27275",
                "offset": 21,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)12407_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6fdd2b27004fef405d49a8e28cc74930069f1d173d713d490a960cdfa72ee239": {
      "address": "0x18A6BcAd5e52cbecc34b987697FC7bE15eDF9599",
      "txHash": "0x5b61357769d9bd760b8b4e9581439e065e5ad1c66b40e1bf5f030a04c85bb759",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_protocolFee",
            "offset": 0,
            "slot": "101",
            "type": "t_uint16",
            "contract": "ProtocolFee",
            "src": "contracts/ProtocolFee.sol:8"
          },
          {
            "label": "_paused",
            "offset": 2,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "bidId",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:92"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(Bid)19406_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:95"
          },
          {
            "label": "borrowerBids",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:98"
          },
          {
            "label": "__lenderVolumeFilled",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:101"
          },
          {
            "label": "__totalVolumeFilled",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:104"
          },
          {
            "label": "__lendingTokensSet",
            "offset": 0,
            "slot": "156",
            "type": "t_struct(AddressSet)9223_storage",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:107"
          },
          {
            "label": "marketRegistry",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IMarketRegistry)20723",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:109"
          },
          {
            "label": "reputationManager",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IReputationManager)20782",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:110"
          },
          {
            "label": "_borrowerBidsActive",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(UintSet)9380_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:113"
          },
          {
            "label": "bidDefaultDuration",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:115"
          },
          {
            "label": "bidExpirationTime",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:116"
          },
          {
            "label": "lenderVolumeFilled",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:120"
          },
          {
            "label": "totalVolumeFilled",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:124"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:126"
          },
          {
            "label": "uris",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:130"
          },
          {
            "label": "_trustedMarketForwarders",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:135"
          },
          {
            "label": "_approvedForwarderSenders",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(AddressSet)9223_storage)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:137"
          },
          {
            "label": "lenderCommitmentForwarder",
            "offset": 0,
            "slot": "169",
            "type": "t_address",
            "contract": "TellerV2Storage_G2",
            "src": "contracts/TellerV2Storage.sol:142"
          },
          {
            "label": "collateralManager",
            "offset": 0,
            "slot": "170",
            "type": "t_contract(ICollateralManager)20156",
            "contract": "TellerV2Storage_G3",
            "src": "contracts/TellerV2Storage.sol:146"
          },
          {
            "label": "lenderManager",
            "offset": 0,
            "slot": "171",
            "type": "t_contract(ILenderManager)20483",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:151"
          },
          {
            "label": "bidPaymentCycleType",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_enum(PaymentCycleType)22798)",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:153"
          },
          {
            "label": "escrowVault",
            "offset": 0,
            "slot": "173",
            "type": "t_contract(IEscrowVault)20469",
            "contract": "TellerV2Storage_G5",
            "src": "contracts/TellerV2Storage.sol:158"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICollateralManager)20156": {
            "label": "contract ICollateralManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)5425": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IEscrowVault)20469": {
            "label": "contract IEscrowVault",
            "numberOfBytes": "20"
          },
          "t_contract(ILenderManager)20483": {
            "label": "contract ILenderManager",
            "numberOfBytes": "20"
          },
          "t_contract(IMarketRegistry)20723": {
            "label": "contract IMarketRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IReputationManager)20782": {
            "label": "contract IReputationManager",
            "numberOfBytes": "20"
          },
          "t_enum(BidState)19378": {
            "label": "enum BidState",
            "members": [
              "NONEXISTENT",
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID",
              "LIQUIDATED",
              "CLOSED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentCycleType)22798": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)22795": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)9223_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)9380_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(PaymentCycleType)22798)": {
            "label": "mapping(uint256 => enum PaymentCycleType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bid)19406_storage)": {
            "label": "mapping(uint256 => struct Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9223_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8908_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bid)19406_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketplaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_metadataURI",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)19423_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)19430_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "state",
                "type": "t_enum(BidState)19378",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)22795",
                "offset": 1,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(LoanDetails)19423_storage": {
            "label": "struct LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(IERC20)5425",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)19383_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32",
                "offset": 4,
                "slot": "4"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32",
                "offset": 8,
                "slot": "4"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32",
                "offset": 12,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Payment)19383_storage": {
            "label": "struct Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interest",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8908_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Terms)19430_storage": {
            "label": "struct Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "APR",
                "type": "t_uint16",
                "offset": 4,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)9380_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8908_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "797b64d3b87c3178c44d57ca0bba037d86cf9710f40eb2d971cc017ba18a17ec": {
      "address": "0x5098102507Da3F71677C5d9e170f91779Fe888F4",
      "txHash": "0xc80211a4326bd85a255f30ee7434dca0fae97cafdb6df1c5b0aa0b5e500455c5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tellerV2",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ITellerV2)25083",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:23"
          },
          {
            "label": "collateralEscrowBeacon",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:24"
          },
          {
            "label": "_escrows",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:27"
          },
          {
            "label": "_bidCollaterals",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_struct(CollateralInfo)13055_storage)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ITellerV2)25083": {
            "label": "contract ITellerV2",
            "numberOfBytes": "20"
          },
          "t_enum(CollateralType)25478": {
            "label": "enum CollateralType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Collateral)25488_storage)": {
            "label": "mapping(address => struct Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollateralInfo)13055_storage)": {
            "label": "mapping(uint256 => struct CollateralManager.CollateralInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4547_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4232_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)25488_storage": {
            "label": "struct Collateral",
            "members": [
              {
                "label": "_collateralType",
                "type": "t_enum(CollateralType)25478",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CollateralInfo)13055_storage": {
            "label": "struct CollateralManager.CollateralInfo",
            "members": [
              {
                "label": "collateralAddresses",
                "type": "t_struct(AddressSet)4547_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralInfo",
                "type": "t_mapping(t_address,t_struct(Collateral)25488_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)4232_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a6c84704267c3cf6c8e6839d2959a07abfb5724037888035f2bade47248900d6": {
      "address": "0xfF5c6530d761aB1Fa5E78e70C791A260Cfe85FbC",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bidId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "CollateralEscrowV1",
            "src": "contracts/escrow/CollateralEscrowV1.sol:16"
          },
          {
            "label": "collateralBalances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_struct(Collateral)25488_storage)",
            "contract": "CollateralEscrowV1",
            "src": "contracts/escrow/CollateralEscrowV1.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CollateralType)25478": {
            "label": "enum CollateralType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Collateral)25488_storage)": {
            "label": "mapping(address => struct Collateral)",
            "numberOfBytes": "32"
          },
          "t_struct(Collateral)25488_storage": {
            "label": "struct Collateral",
            "members": [
              {
                "label": "_collateralType",
                "type": "t_enum(CollateralType)25478",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7a0365f1d2728c50c75bf178b78d68ce83ebd37a1f6995b18fee9abcd8efc30f": {
      "address": "0x760E7d5AB07B6FED640041de8f209fCBD2F83DCe",
      "txHash": "0xdf8f5689db455bdb9dba872647307a95410b1b828ac49f1aa0a046fea0f9e5b1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bidId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "CollateralEscrowV1",
            "src": "contracts/escrow/CollateralEscrowV1.sol:16"
          },
          {
            "label": "collateralBalances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_struct(Collateral)1741_storage)",
            "contract": "CollateralEscrowV1",
            "src": "contracts/escrow/CollateralEscrowV1.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CollateralType)1731": {
            "label": "enum CollateralType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Collateral)1741_storage)": {
            "label": "mapping(address => struct Collateral)",
            "numberOfBytes": "32"
          },
          "t_struct(Collateral)1741_storage": {
            "label": "struct Collateral",
            "members": [
              {
                "label": "_collateralType",
                "type": "t_enum(CollateralType)1731",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b3b70927390ace7c8384c8abf6aeb1575b7b52f026ba6924c1677f98403e91b": {
      "address": "0xf236d5Cc4d45eA0eF223Bfdf9583e655f51C12fB",
      "txHash": "0x9fa1817c5bb78451199b80f6b983c0384720b08dcdc034e80f8a9078dbbe78a3",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "479e5a58639f67d5db45aa1ca015a153d53f8ab87642832f2ecd1a9927341a87": {
      "address": "0x193d59841945979e0AA7Cd7D62d7262285390073",
      "txHash": "0x4a31266aa839bc85d33e1ffef581694bc6683d6f2d0d766692e694dc396cd6b1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "TellerV2MarketForwarder",
            "src": "contracts/TellerV2MarketForwarder.sol:152"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(Commitment)15763_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:57"
          },
          {
            "label": "commitmentCount",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:59"
          },
          {
            "label": "commitmentBorrowersList",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)4547_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:62"
          },
          {
            "label": "commitmentPrincipalAccepted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(CommitmentCollateralType)15739": {
            "label": "enum LenderCommitmentForwarder.CommitmentCollateralType",
            "members": [
              "NONE",
              "ERC20",
              "ERC721",
              "ERC1155",
              "ERC721_ANY_ID",
              "ERC1155_ANY_ID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)4547_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commitment)15763_storage)": {
            "label": "mapping(uint256 => struct LenderCommitmentForwarder.Commitment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4547_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4232_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Commitment)15763_storage": {
            "label": "struct LenderCommitmentForwarder.Commitment",
            "members": [
              {
                "label": "maxPrincipal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minInterestRate",
                "type": "t_uint16",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "collateralTokenAddress",
                "type": "t_address",
                "offset": 10,
                "slot": "1"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPrincipalPerCollateralAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collateralTokenType",
                "type": "t_enum(CommitmentCollateralType)15739",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "principalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4232_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "11e87680e61edb14d5bb459b9b20812a37069ffc0e756eae131a73cdc5ddbe6d": {
      "address": "0xED4344702453248eEaf936dc9Fb11650C4157a11",
      "txHash": "0x37d20dd0a56215eef6c70eaaf60499c31da20a9312d6528d5e75d7040ae8ee81",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "TellerV2MarketForwarder",
            "src": "contracts/TellerV2MarketForwarder.sol:152"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(Commitment)11985_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:60"
          },
          {
            "label": "commitmentCount",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:62"
          },
          {
            "label": "commitmentBorrowersList",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)4033_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:65"
          },
          {
            "label": "commitmentPrincipalAccepted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(CommitmentCollateralType)11961": {
            "label": "enum LenderCommitmentForwarder.CommitmentCollateralType",
            "members": [
              "NONE",
              "ERC20",
              "ERC721",
              "ERC1155",
              "ERC721_ANY_ID",
              "ERC1155_ANY_ID",
              "ERC721_MERKLE_PROOF",
              "ERC1155_MERKLE_PROOF"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)4033_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commitment)11985_storage)": {
            "label": "mapping(uint256 => struct LenderCommitmentForwarder.Commitment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4033_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3718_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Commitment)11985_storage": {
            "label": "struct LenderCommitmentForwarder.Commitment",
            "members": [
              {
                "label": "maxPrincipal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minInterestRate",
                "type": "t_uint16",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "collateralTokenAddress",
                "type": "t_address",
                "offset": 10,
                "slot": "1"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPrincipalPerCollateralAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collateralTokenType",
                "type": "t_enum(CommitmentCollateralType)11961",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "principalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)3718_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f7e687d03348b5404e02b20629f7fc8f48e86b0f51f9b7aa9b23ddbaa83efc01": {
      "address": "0x62babFC668494145051a473112De8D3e93d3927E",
      "txHash": "0x1de99cc00cf5eae3fb3b169ab9c6eb29a19dc827b951e1b3e7103509572f04f9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
