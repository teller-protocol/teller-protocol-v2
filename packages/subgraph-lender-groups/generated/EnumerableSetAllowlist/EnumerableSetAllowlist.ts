// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdatedAllowList extends ethereum.Event {
  get params(): UpdatedAllowList__Params {
    return new UpdatedAllowList__Params(this);
  }
}

export class UpdatedAllowList__Params {
  _event: UpdatedAllowList;

  constructor(event: UpdatedAllowList) {
    this._event = event;
  }

  get commitmentId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EnumerableSetAllowlist extends ethereum.SmartContract {
  static bind(address: Address): EnumerableSetAllowlist {
    return new EnumerableSetAllowlist("EnumerableSetAllowlist", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  addressIsAllowed(_commitmentId: BigInt, _account: Address): boolean {
    let result = super.call(
      "addressIsAllowed",
      "addressIsAllowed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_commitmentId),
        ethereum.Value.fromAddress(_account)
      ]
    );

    return result[0].toBoolean();
  }

  try_addressIsAllowed(
    _commitmentId: BigInt,
    _account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addressIsAllowed",
      "addressIsAllowed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_commitmentId),
        ethereum.Value.fromAddress(_account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  commitmentManager(): Address {
    let result = super.call(
      "commitmentManager",
      "commitmentManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_commitmentManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "commitmentManager",
      "commitmentManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllowedAddresses(_commitmentId: BigInt): Array<Address> {
    let result = super.call(
      "getAllowedAddresses",
      "getAllowedAddresses(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_commitmentId)]
    );

    return result[0].toAddressArray();
  }

  try_getAllowedAddresses(
    _commitmentId: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllowedAddresses",
      "getAllowedAddresses(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_commitmentId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AdminCall extends ethereum.Call {
  get inputs(): AdminCall__Inputs {
    return new AdminCall__Inputs(this);
  }

  get outputs(): AdminCall__Outputs {
    return new AdminCall__Outputs(this);
  }
}

export class AdminCall__Inputs {
  _call: AdminCall;

  constructor(call: AdminCall) {
    this._call = call;
  }
}

export class AdminCall__Outputs {
  _call: AdminCall;

  constructor(call: AdminCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ChangeAdminCall extends ethereum.Call {
  get inputs(): ChangeAdminCall__Inputs {
    return new ChangeAdminCall__Inputs(this);
  }

  get outputs(): ChangeAdminCall__Outputs {
    return new ChangeAdminCall__Outputs(this);
  }
}

export class ChangeAdminCall__Inputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }

  get newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeAdminCall__Outputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }
}

export class ImplementationCall extends ethereum.Call {
  get inputs(): ImplementationCall__Inputs {
    return new ImplementationCall__Inputs(this);
  }

  get outputs(): ImplementationCall__Outputs {
    return new ImplementationCall__Outputs(this);
  }
}

export class ImplementationCall__Inputs {
  _call: ImplementationCall;

  constructor(call: ImplementationCall) {
    this._call = call;
  }
}

export class ImplementationCall__Outputs {
  _call: ImplementationCall;

  constructor(call: ImplementationCall) {
    this._call = call;
  }

  get implementation_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class AddressIsAllowedCall extends ethereum.Call {
  get inputs(): AddressIsAllowedCall__Inputs {
    return new AddressIsAllowedCall__Inputs(this);
  }

  get outputs(): AddressIsAllowedCall__Outputs {
    return new AddressIsAllowedCall__Outputs(this);
  }
}

export class AddressIsAllowedCall__Inputs {
  _call: AddressIsAllowedCall;

  constructor(call: AddressIsAllowedCall) {
    this._call = call;
  }

  get _commitmentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddressIsAllowedCall__Outputs {
  _call: AddressIsAllowedCall;

  constructor(call: AddressIsAllowedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetAllowlistCall extends ethereum.Call {
  get inputs(): SetAllowlistCall__Inputs {
    return new SetAllowlistCall__Inputs(this);
  }

  get outputs(): SetAllowlistCall__Outputs {
    return new SetAllowlistCall__Outputs(this);
  }
}

export class SetAllowlistCall__Inputs {
  _call: SetAllowlistCall;

  constructor(call: SetAllowlistCall) {
    this._call = call;
  }

  get _commitmentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _addressList(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SetAllowlistCall__Outputs {
  _call: SetAllowlistCall;

  constructor(call: SetAllowlistCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _logic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get admin_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
