{{#*inline "global_required_abis"}}
        - name: TellerV2
          file: ./abis/{{network}}_TellerV2.json
        - name: TellerV0Storage
          file: ../../packages/contracts/generated/artifacts/contracts/TellerV0Storage.sol/TellerV0Storage.json
        - name: ERC165
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: IERC20Metadata
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json
{{/inline}}
specVersion: 0.0.2
schema:
  file: ./src/schema.graphql
{{#with grafting}}
{{#if enabled}}
features:
  - grafting
graft:
  base: {{base}}
  block: {{block}}
{{/if}}
{{/with}}
dataSources:
{{#if block_handler.enabled}}
  - kind: ethereum/contract
    name: Blocks
    network: {{network}}
    source:
      {{#with block_handler}}
      address: '{{../contracts.teller_v2.address}}'
      abi: TellerV2
      startBlock: {{block}}
      {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Protocol
        - LoanStatusCount
        - TokenVolume
        - Token
        - Bid
      abis:
        - name: TellerV2
          file: ./abis/{{network}}_TellerV2.json
        - name: TellerV0Storage
          file: ../../packages/contracts/generated/artifacts/contracts/TellerV0Storage.sol/TellerV0Storage.json
        - name: ERC165
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: IERC20Metadata
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json
      blockHandlers:
        - handler: handleBlock
      file: ./src/block-handler.ts
{{/if}}
{{#if contracts.teller_v2.enabled}}
  - kind: ethereum/contract
    name: TellerV2
    network: {{network}}
    source:
    {{#with contracts.teller_v2}}
      address: '{{address}}'
      abi: TellerV2
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Bid
        - Borrower
        - Lender
        - Token
        - TokenVolume
        - LoanStatusCount
      abis:
        - name: TellerV2
          file: ./abis/{{network}}_TellerV2.json
        - name: TellerV0Storage
          file: ../../packages/contracts/generated/artifacts/contracts/TellerV0Storage.sol/TellerV0Storage.json
        - name: ERC165
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: IERC20Metadata
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json
      eventHandlers:
        # TODO: add MarketForwarderApproved event for Lender entity

        - event: SubmittedBid(indexed uint256,indexed address,address,indexed bytes32)
          handler: handleSubmittedBid
        - event: AcceptedBid(indexed uint256,indexed address)
          handler: handleAcceptedBid
        - event: CancelledBid(indexed uint256)
          handler: handleCancelledBid

        - event: LoanLiquidated(indexed uint256,indexed address)
          handler: handleLoanLiquidated
        - event: LoanRepayment(indexed uint256)
          handler: handleLoanRepayment
        - event: LoanRepaid(indexed uint256)
          handler: handleLoanRepaid

        - event: FeePaid(indexed uint256,indexed string,indexed uint256)
          handler: handleFeePaid
        - event: Upgraded(indexed address)
          handler: handleTellerV2Upgraded
      file: ./src/mapping.ts
{{/if}}
{{#if contracts.market_registry.enabled}}
  - kind: ethereum/contract
    name: MarketRegistry
    network: {{network}}
    source:
    {{#with contracts.market_registry}}
      address: '{{address}}'
      abi: MarketRegistry
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - MarketPlace
      abis:
        - name: MarketRegistry
          file: ./abis/{{network}}_MarketRegistry.json
      eventHandlers:
        - event: MarketCreated(indexed address,uint256)
          handler: handleMarketCreated
        - event: SetMarketURI(uint256,string)
          handler: handleSetMarketURI
        - event: SetMarketOwner(uint256,address)
          handler: handleSetMarketOwner
        - event: SetMarketFeeRecipient(uint256,address)
          handler: handleSetMarketFeeRecipient
        - event: SetPaymentCycleDuration(uint256,uint32)
          handler: handleSetPaymentCycleDuration
        - event: SetPaymentCycle(uint256,uint8,uint32)
          handler: handleSetPaymentCycle
        - event: SetPaymentDefaultDuration(uint256,uint32)
          handler: handleSetPaymentDefaultDuration
        - event: SetBidExpirationTime(uint256,uint32)
          handler: handleSetBidExpirationTime
        - event: SetMarketFee(uint256,uint16)
          handler: handleSetMarketFee
        - event: SetMarketLenderAttestation(uint256,bool)
          handler: handleSetLenderAttestationRequired
        - event: SetMarketBorrowerAttestation(uint256,bool)
          handler: handleSetBorrowerAttestationRequired
        - event: LenderAttestation(uint256,address)
          handler: handleLenderAttestation
        - event: BorrowerAttestation(uint256,address)
          handler: handleBorrowerAttestation
        - event: LenderExitMarket(uint256,address)
          handler: handleLenderExitMarket
        - event: BorrowerExitMarket(uint256,address)
          handler: handleBorrowerExitMarket
        - event: MarketClosed(uint256)
          handler: handleMarketClosed
        - event: Upgraded(indexed address)
          handler: handleMarketRegistryUpgraded
        - event: SetMarketPaymentType(uint256,uint8)
          handler: handleSetMarketPaymentType
      file: ./src/market-registry/mapping.ts
{{/if}}
{{#if contracts.lender_commitment.enabled}}
  - kind: ethereum/contract
    name: LenderCommitmentForwarder
    network: {{network}}
    source:
    {{#with contracts.lender_commitment}}
      address: '{{address}}'
      abi: LenderCommitmentForwarder
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Commitment
        - Token
        - TokenVolume
        - CollateralPairTokenVolume
        - LoanStatusCount
      abis:
        - name: LenderCommitmentForwarder
          file: ./abis/{{network}}_LenderCommitmentForwarder.json
        - name: ERC165
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: IERC20Metadata
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json
      eventHandlers:
        - event: CreatedCommitment(indexed uint256,address,uint256,address,uint256)
          handler: handleCreatedCommitment
        - event: UpdatedCommitment(indexed uint256,address,uint256,address,uint256)
          handler: handleUpdatedCommitment
        - event: DeletedCommitment(indexed uint256)
          handler: handleDeletedCommitment
        - event: ExercisedCommitment(indexed uint256,address,uint256,uint256)
          handler: handleExercisedCommitment
        - event: UpdatedCommitmentBorrowers(indexed uint256)
          handler: handeUpdatedCommitmentBorrower
      file: ./src/lender-commitment/mapping.ts
{{/if}}
{{#if contracts.collateral_manager.enabled}}
  - kind: ethereum/contract
    name: CollateralManager
    network: {{network}}
    source:
    {{#with contracts.collateral_manager}}
      address: '{{address}}'
      abi: CollateralManager
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Bid
        - BidCollateral
        - Collateral
      abis:
        - name: CollateralManager
          file: ./abis/{{network}}_CollateralManager.json
        - name: ERC165
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: IERC20Metadata
          file: ../../packages/contracts/generated/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json
      eventHandlers:
        - event: CollateralEscrowDeployed(uint256,address)
          handler: handleCollateralEscrowDeployed
        - event: CollateralCommitted(uint256,uint8,address,uint256,uint256)
          handler: handleCollateralCommitted
        - event: CollateralDeposited(uint256,uint8,address,uint256,uint256)
          handler: handleCollateralDeposited
        - event:  CollateralWithdrawn(uint256,uint8,address,uint256,uint256,address)
          handler: handleCollateralWithdrawn
        - event: CollateralClaimed(uint256)
          handler: handleCollateralClaimed
      file: ./src/collateral-manager/mapping.ts
{{/if}}
{{#if contracts.market_liquidity_rewards.enabled}}
  - kind: ethereum/contract
    name: MarketLiquidityRewards
    network: {{network}}
    source:
    {{#with contracts.market_liquidity_rewards}}
      address: '{{address}}'
      abi: MarketLiquidityRewards
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - RewardAllocation
        - ClaimableReward
      abis:
{{> global_required_abis}}
        - name: MarketLiquidityRewards
          file: ./abis/{{network}}_MarketLiquidityRewards.json
      eventHandlers:
        - event: CreatedAllocation(uint256,address,uint256)
          handler: handleCreatedAllocation
        - event: IncreasedAllocation(uint256,uint256)
          handler: handleIncreasedAllocation
        - event: DecreasedAllocation(uint256,uint256)
          handler: handleDecreasedAllocation
        - event: UpdatedAllocation(uint256)
          handler: handleUpdatedAllocation
        - event: DeletedAllocation(uint256)
          handler: handleDeletedAllocation
        - event: ClaimedRewards(uint256,uint256,address,uint256)
          handler: handleClaimedReward
      file: ./src/liquidity-rewards/mapping.ts
{{/if}}
{{#if contracts.lender_manager.enabled}}
  - kind: ethereum/contract
    name: LenderManager
    network: {{network}}
    source:
    {{#with contracts.lender_manager}}
      address: '{{address}}'
      abi: LenderManager
      startBlock: {{block}}
    {{/with}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Bid
        - MarketPlace
        - Lender
        - TokenVolume
      abis:
        - name: LenderManager
          file: ./abis/{{network}}_LenderManager.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleNewLenderSet
      file: ./src/mapping.ts
{{/if}}
